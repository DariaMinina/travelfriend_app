name: client_CI

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies and modules
        run: |
          cd ./client
          echo $(ls)
          npm install
          npm install vitest@latest
          npm install --save-dev @vitest/coverage-istanbul

      - name: Run tests
        env:
          VITE_SERVER_CONNECT_STRING: "http://127.0.0.1:5015"
        run: |
          cd ./client
          echo $(ls)
          npm run test:unit

      - name: Archive coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./client/coverage
          
  sonarqube:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: ./client/coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.javascript.lcov.reportPaths=./client/coverage/lcov.info
            -Dsonar.sources=client/
            -sonar.coverage.exclusions=**/*.js,client/src/App.vue
          
  build:
    needs: sonarqube
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies and modules
        env:
          VITE_SERVER_CONNECT_STRING: "http://127.0.0.1:5015"
        run: |
          cd ./client
          echo $(ls)
          npm install

      - name: Build application
        env:
          VITE_SERVER_CONNECT_STRING: "http://127.0.0.1:5015"
        run: |
          cd ./client
          echo $(ls)
          npm run build

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/client-app

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: client/
          file: client/Dockerfile
          push: true
          tags: vadksen01/client-app:latest
          annotations: ${{ steps.meta.outputs.annotations }}
          
